854             if(arg_list[i].size() <= 2){
(gdb) n
918           size() const _GLIBCXX_NOEXCEPT
(gdb) n
866             con.parent = now_scope;
(gdb) awatch con.parent 
Hardware access (read/write) watchpoint 3: con.parent
(gdb) p con.parent 
$2 = (Type *) 0x7fffffffb4f0
(gdb) n

Hardware access (read/write) watchpoint 3: con.parent

Old value = (Type *) 0x7fffffffb4f0
New value = (Type *) 0x555555588c20
Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at ./src/script.h:867
867             con = eval(WordCollection(arg_list[i],2));
(gdb) p con.parent 
$3 = (Type *) 0x555555588c20
(gdb) p now_scope 
$4 = (Type *) 0x555555588c20
(gdb) n

Hardware access (read/write) watchpoint 3: con.parent

Old value = (Type *) 0x555555588c20
New value = (Type *) 0x7fffffff93a8
0x000055555555add3 in Type::operator= (this=0x7fffffffb4f0) at ./src/type.h:71
71      class Type{
(gdb) n
322           { __c1 = __c2; }
(gdb) n
71      class Type{
(gdb) n
Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at ./src/script.h:868
868             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n

Hardware access (read/write) watchpoint 3: con.parent

Value = (Type *) 0x7fffffff93a8
0x00005555555647f0 in Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at ./src/script.h:868
868             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) q
A debugging session is active.

        Inferior 1 [process 14285] will be killed.

Quit anyway? (y or n) y
p0010@kali:/media/p0010/Data/projects/Xscript$ make -f Makefile.unix-like all
g++      ./idle.cpp      -o idle         -std=c++11 -w -pipe -O2 -ldl -g
^[[A^[[A
g++      ./script.cpp    -o script       -std=c++11 -w -pipe -O2 -ldl -g
cd include/lib && make all
make[1]: 进入目录“/media/p0010/Data/projects/Xscript/include/lib”
g++ -shared -std=c++11 -fPIC -w stdlib.cpp -o stdlib
make[1]: 离开目录“/media/p0010/Data/projects/Xscript/include/lib”
p0010@kali:/media/p0010/Data/projects/Xscript$ gdb ./script
GNU gdb (Debian 9.2-1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.                                                                                                                     
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./script...
(gdb) r
Starting program: /media/p0010/Data/projects/Xscript/script 
PARENT:0x7fffffffc070 0x7fffffffc070
PARENT:0x7fffffffc070 0x7fffffffc070
PARENT:0x5555555723a0 0x5555555723a0
PARENT:0x555555588c20 0x555555588c20

Program received signal SIGSEGV, Segmentation fault.
__memcmp_avx2_movbe () at ../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:217
217     ../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S: 没有那个文件或目录.
(gdb) ny
Undefined command: "ny".  Try "help".
(gdb) bt
#0  __memcmp_avx2_movbe () at ../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:217
#1  0x0000555555569bcb in std::char_traits<char>::compare (__n=<optimized out>, __s2=<optimized out>, __s1=<optimized out>)
    at /usr/include/c++/10/bits/char_traits.h:347
#2  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare (this=0x555555588f30, __str="s", this=0x555555588f30, __str="s")
    at /usr/include/c++/10/bits/basic_string.h:2858
#3  std::operator< <char, std::char_traits<char>, std::allocator<char> > (__rhs="s", __lhs=<error: Cannot access memory at address 0x7d>)
    at /usr/include/c++/10/bits/basic_string.h:6270
#4  std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator() (__y="s", 
    __x=<error: Cannot access memory at address 0x7d>, this=<optimized out>) at /usr/include/c++/10/bits/stl_function.h:386
#5  std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> > >::_M_lower_bound (this=<optimized out>, __k="s", __y=0x7fffffffc118, __x=0x555555588f10)                                     
    at /usr/include/c++/10/bits/stl_tree.h:1935
#6  std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> > >::lower_bound (__k="s", this=<optimized out>) at /usr/include/c++/10/bits/stl_tree.h:1277                                    
#7  std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Type, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> > >::lower_bound (   
    __x="s", this=<optimized out>) at /usr/include/c++/10/bits/stl_map.h:1259
#8  std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Type, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> > >::operator[] (    
    this=0x7fffffffc110, __k="s") at /usr/include/c++/10/bits/stl_map.h:497
#9  0x000055555556a1a3 in Type::getNode (this=0x7fffffffc070, tyfind=...) at ./src/type.h:92
#10 0x0000555555561718 in getTypeContent (name="s") at /usr/include/c++/10/bits/stl_stack.h:99
#11 0x0000555555561df3 in Script (wrd=std::vector of length 5, capacity 5 = {...}) at /usr/include/c++/10/bits/stl_vector.h:1043
#12 0x000055555556502e in Script (expr=...) at ./src/script.h:970
#13 0x0000555555562f67 in Script (wrd=std::vector of length 19, capacity 19 = {...}) at /usr/include/c++/10/bits/stl_vector.h:1043
#14 0x000055555556502e in Script (expr=...) at ./src/script.h:970
#15 0x0000555555565e1a in CallFunction (func=0x555555588c20, call_line=...) at /usr/include/c++/10/bits/basic_string.h:907
#16 0x000055555556241e in Script (wrd=...) at /usr/include/c++/10/bits/stl_vector.h:1043
#17 0x000055555556502e in Script (expr=...) at ./src/script.h:970
#18 0x0000555555559d4d in main (argc=<optimized out>, argv=<optimized out>) at ./script.cpp:88
(gdb) q
A debugging session is active.

        Inferior 1 [process 14490] will be killed.

Quit anyway? (y or n) n
Not confirmed.
(gdb) awatch now_scope 
Hardware access (read/write) watchpoint 1: now_scope
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /media/p0010/Data/projects/Xscript/script 

Hardware access (read/write) watchpoint 1: now_scope

Old value = (class Type *) 0x1e3a0
New value = (class Type *) 0x5555555723a0 <root_scope>
elf_dynamic_do_Rela (skip_ifunc=<optimized out>, lazy=0, nrelative=0, relsize=0, reladdr=0, map=0x7ffff7ffe180) at do-rel.h:111
111     do-rel.h: 没有那个文件或目录.
(gdb) n
112     in do-rel.h
(gdb) n
111     in do-rel.h
(gdb) n
112     in do-rel.h
(gdb) n
111     in do-rel.h
(gdb) n
118     in do-rel.h
(gdb) n
121     in do-rel.h
(gdb) n
124     in do-rel.h
(gdb) 
127     in do-rel.h
(gdb) 
136     in do-rel.h
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
Script (wrd=std::vector of length -3518437208633, capacity 179116299096964148 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
getTypeContent (name="class") at ./src/script.h:148
148       Type thisScope = now_scope->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
getTypeContent (name="class") at ./src/script.h:151
151       Type inThisParent = now_scope->parent->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x0000555555561ff9 in Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:578
578             Type newclass(now_scope);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x0000555555562036 in Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:582
582             newclass.parent = now_scope;
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Old value = (Type *) 0x5555555723a0 <root_scope>
New value = (Type *) 0x7fffffffc070
0x000055555556203d in Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:582
582             newclass.parent = now_scope;
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x00005555555647ec in Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x000055555556482d in Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at /usr/include/c++/10/ostream:245
245           operator<<(const void* __p)
(gdb) c
Continuing.
PARENT:0x7fffffffc070 0x7fffffffc070

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x000055555556188d in newTypeContent (name=..., write=..., inglobal=<optimized out>) at ./src/script.h:181
181       return now_scope->newNode(tpf,write);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
getTypeContent (name="function") at ./src/script.h:148
148       Type thisScope = now_scope->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
getTypeContent (name="function") at ./src/script.h:151
151       Type inThisParent = now_scope->parent->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x00005555555647ec in Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) quit
A debugging session is active.

        Inferior 1 [process 14503] will be killed.

Quit anyway? (y or n) y
p0010@kali:/media/p0010/Data/projects/Xscript$ gdb ./script
GNU gdb (Debian 9.2-1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.                                                                                                                     
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./script...
(gdb) p now_scope 
$1 = (Type *) 0x1e3a0 <root_scope>
(gdb) awatch now_scope 
Hardware access (read/write) watchpoint 1: now_scope
(gdb) r
Starting program: /media/p0010/Data/projects/Xscript/script 

Hardware access (read/write) watchpoint 1: now_scope

Old value = (class Type *) 0x1e3a0
New value = (class Type *) 0x5555555723a0 <root_scope>
elf_dynamic_do_Rela (skip_ifunc=<optimized out>, lazy=0, nrelative=0, relsize=0, reladdr=0, map=0x7ffff7ffe180) at do-rel.h:111
111     do-rel.h: 没有那个文件或目录.
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
Script (wrd=std::vector of length -3518437208633, capacity 179116299096964148 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
getTypeContent (name="class") at ./src/script.h:148
148       Type thisScope = now_scope->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
getTypeContent (name="class") at ./src/script.h:151
151       Type inThisParent = now_scope->parent->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x0000555555561ff9 in Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:578
578             Type newclass(now_scope);
(gdb) p wrd
$2 = std::vector of length 4, capacity 4 = {{word_type = nam, wd = "class"}, {word_type = chr, wd = "("}, {word_type = chr, wd = ")"}, {word_type = blo, 
    wd = "var s=0;var fun=function(){for(var x=0,x<=10,x=x+1){s=s+1; };};"}}
(gdb) n
581             newclass.name = "flag";
(gdb) n
587             Script(wrd[block_pos].wd);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x0000555555562036 in Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:582
582             newclass.parent = now_scope;
(gdb) p newclass.parent 
$3 = (Type *) 0x5555555723a0 <root_scope>
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Old value = (Type *) 0x5555555723a0 <root_scope>
New value = (Type *) 0x7fffffffc070
0x000055555556203d in Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:582
582             newclass.parent = now_scope;
(gdb) n
1043          operator[](size_type __n) _GLIBCXX_NOEXCEPT
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) 
918           size() const _GLIBCXX_NOEXCEPT
(gdb) 
867             con.parent = now_scope;
(gdb) 
868             con = eval(WordCollection(arg_list[i],2));
(gdb) p con.name
$4 = ""
(gdb) p con.parent 
$5 = (Type *) 0x7fffffffc070
(gdb) p *con.parent 
$6 = {parent = 0x5555555723a0 <root_scope>, vtype = _str, type = _var, mod = _temp, name = "flag", content = "", args = std::vector of length 0, capacity 0, 
  funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, node = std::map with 0 elements}
(gdb) n
869             con.parent = now_scope;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x00005555555647ec in Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x000055555556482d in Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at /usr/include/c++/10/ostream:245
245           operator<<(const void* __p)
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n
PARENT:0x7fffffffc070 0x7fffffffc070
871             con.name = tname;
(gdb) n
872             con.mod = _none;
(gdb) p con.parent 
$7 = (Type *) 0x7fffffffc070
(gdb) n
874             if(!newTypeContent(tname,con)) throw Error::AlreadyExist(tname);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x000055555556188d in newTypeContent (name=..., write=..., inglobal=<optimized out>) at ./src/script.h:181
181       return now_scope->newNode(tpf,write);
(gdb) p name
$8 = <optimized out>
(gdb) n
Script (wrd=std::vector of length -3518437208342, capacity -3518437208339 = {...}) at /usr/include/c++/10/ext/new_allocator.h:89
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
865               continue;
(gdb) n
846           for (size_t i = 0; i < arg_list.size(); i++) {
(gdb) 
880           scr.res = _finally;
(gdb) 
881           scr.Content = con;
(gdb) 
882           return scr;
(gdb) p scr
$9 = {res = _lopcontinue, Content = {parent = 0x7fffffffc070, vtype = _int, type = _var, mod = _none, name = "s", content = "\000\000\000", 
    args = std::vector of length 0, capacity 0, funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, node = std::map with 0 elements}}
(gdb) n
541       ScriptResult scr;
(gdb) n
Script (expr=...) at ./src/script.h:970
970         scr = Script(tmplst);
(gdb) p expr
$10 = <optimized out>
(gdb) n
971         if(CodeArr.size() == 1)  return scr;
(gdb) n
972         if(scr.res != _finally)  return scr;
(gdb) n
969         vector<word> tmplst = WordParser(CodeArr[i]);
(gdb) n
967       for (size_t i = 0; i < CodeArr.size(); i++) {
(gdb) n
968         if(CodeArr[i] == "" || CodeArr[i] == " ")  continue;
(gdb) n
968         if(CodeArr[i] == "" || CodeArr[i] == " ")  continue;
(gdb) n
969         vector<word> tmplst = WordParser(CodeArr[i]);
(gdb) n
657           ~basic_string()
(gdb) n
970         scr = Script(tmplst);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) n
918           size() const _GLIBCXX_NOEXCEPT
(gdb) n
867             con.parent = now_scope;
(gdb) p con.parent 
$11 = (Type *) 0x7fffffffad40
(gdb) n
868             con = eval(WordCollection(arg_list[i],2));
(gdb) p con.parent 
$12 = (Type *) 0x7fffffffc070
(gdb) awatch con.parent 
Hardware access (read/write) watchpoint 2: con.parent
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
getTypeContent (name="function") at ./src/script.h:148
148       Type thisScope = now_scope->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
getTypeContent (name="function") at ./src/script.h:151
151       Type inThisParent = now_scope->parent->getNode(tpf);
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 2: con.parent

Old value = (Type *) 0x7fffffffc070
New value = (Type *) 0x7fffffff8bf8
0x000055555555add3 in Type::operator= (this=0x7fffffffad40) at ./src/type.h:71
71      class Type{
(gdb) n
322           { __c1 = __c2; }
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x00005555555647ec in Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) n

Hardware access (read/write) watchpoint 2: con.parent

Old value = (Type *) 0x7fffffff8bf8
New value = (Type *) 0x7fffffffc070
Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:870
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n

Hardware access (read/write) watchpoint 2: con.parent

Value = (Type *) 0x7fffffffc070
0x000055555556480f in Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:870
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x000055555556482d in Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at /usr/include/c++/10/ostream:245
245           operator<<(const void* __p)
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n
PARENT:0x7fffffffc070 0x7fffffffc070
871             con.name = tname;
(gdb) p con.parent 
$13 = (Type *) 0x7fffffffc070
(gdb) n
872             con.mod = _none;
(gdb) n
874             if(!newTypeContent(tname,con)) throw Error::AlreadyExist(tname);
(gdb) n

Hardware access (read/write) watchpoint 2: con.parent

Value = (Type *) 0x7fffffffc070
0x00005555555691bb in Type::Type (this=0x7fffffffae20) at ./src/type.h:71
71      class Type{
(gdb) n
71      class Type{
(gdb) n
71      class Type{
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x7fffffffc070
0x000055555556188d in newTypeContent (name=..., write=..., inglobal=<optimized out>) at ./src/script.h:181
181       return now_scope->newNode(tpf,write);
(gdb) n
Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at /usr/include/c++/10/ext/new_allocator.h:89
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
865               continue;
(gdb) n
846           for (size_t i = 0; i < arg_list.size(); i++) {
(gdb) n
880           scr.res = _finally;
(gdb) 
881           scr.Content = con;
(gdb) 

Hardware access (read/write) watchpoint 2: con.parent

Value = (Type *) 0x7fffffffc070
0x0000555555560f28 in Type::operator= (this=0x7fffffffa728) at ./src/type.h:71
71      class Type{
(gdb) p con.parent 
Attempt to extract a component of a value that is not a structure.
(gdb) n
1335          assign(const basic_string& __str)
(gdb) n
71      class Type{
(gdb) n
319           operator=(const map&) = default;
(gdb) n
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Type> > >::operator= (this=0x7fffffffa7c8, __x=...) at /usr/include/c++/10/bits/stl_tree.h:1763                                           
1763        _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
(gdb) n
1785              _Reuse_or_alloc_node __roan(*this);
(gdb) n
1786              _M_impl._M_reset();
(gdb) n
728           _M_root() const _GLIBCXX_NOEXCEPT
(gdb) n
Script (wrd=std::vector of length -3518437208342, capacity -3518437027367 = {...}) at ./src/script.h:882
882           return scr;
(gdb) n
541       ScriptResult scr;
(gdb) n

Watchpoint 2 deleted because the program has left the block in
which its expression is valid.
Script (expr=...) at ./src/script.h:970
970         scr = Script(tmplst);
(gdb) p expr
$14 = <optimized out>
(gdb) n
971         if(CodeArr.size() == 1)  return scr;
(gdb) n
972         if(scr.res != _finally)  return scr;
(gdb) n
969         vector<word> tmplst = WordParser(CodeArr[i]);
(gdb) n
967       for (size_t i = 0; i < CodeArr.size(); i++) {
(gdb) n
964       vector<string> CodeArr = CodeSplit(expr,';');
(gdb) n
925       vector< vector<word> > word_list;
(gdb) n
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:587
587             Script(wrd[block_pos].wd);
(gdb) n
592             newclass.content = "<Xscript_class>";
(gdb) p newclass 
$15 = {parent = 0x5555555723a0 <root_scope>, vtype = _str, type = _var, mod = _temp, name = "flag", content = "", args = std::vector of length 0, capacity 0, 
  funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, node = std::map with 3 elements = {["fun"] = {parent = 0x7fffffffc070, vtype = _function, type = _var, 
      mod = _none, name = "fun", content = "for(var x=0,x<=10,x=x+1){s=s+1; };", args = std::vector of length 0, capacity 0, funcontent = {word_type = blo, 
        wd = "for(var x=0,x<=10,x=x+1){s=s+1; };"}, fromDLL = 0x0, node = std::map with 0 elements}, ["function"] = {parent = 0x555555587e70, vtype = _emp, 
      type = _not_exist, mod = _temp, name = "", content = "", args = std::vector of length 0, capacity 0, funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, 
      node = std::map with 0 elements}, ["s"] = {parent = 0x7fffffffc070, vtype = _int, type = _var, mod = _none, name = "s", content = "\000\000\000", 
      args = std::vector of length 0, capacity 0, funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, node = std::map with 0 elements}}}
(gdb) p &new
A syntax error in expression, near `new'.
(gdb) p &newclass 
$16 = (Type *) 0x7fffffffc070
(gdb) c
Continuing.

Hardware access (read/write) watchpoint 1: now_scope

Old value = (Type *) 0x7fffffffc070
New value = (Type *) 0x5555555723a0 <root_scope>
Script (wrd=std::vector of length 4, capacity 4 = {...}) at ./src/script.h:591
591             newclass.vtype = _str;
(gdb) b getTypeContent
Breakpoint 3 at 0x5555555612f0: file ./src/script.h, line 142.
(gdb) help clean
Undefined command: "clean".  Try "help".
(gdb) help clear
Clear breakpoint at specified location.
Argument may be a linespec, explicit, or address location as described below.

With no argument, clears all breakpoints in the line that the selected frame
is executing in.

Linespecs are colon-separated lists of location parameters, such as
source filename, function name, label name, and line number.
Example: To specify the start of a label named "the_top" in the
function "fact" in the file "factorial.c", use
"factorial.c:fact:the_top".

Address locations begin with "*" and specify an exact address in the
program.  Example: To specify the fourth byte past the start function
"main", use "*main + 4".

Explicit locations are similar to linespecs but use an option/argument
syntax to specify location parameters.
Example: To specify the start of the label named "the_top" in the
function "fact" in the file "factorial.c", use "-source factorial.c
-function fact -label the_top".

By default, a specified function is matched against the program's
functions in all scopes.  For C++, this means in all namespaces and
classes.  For Ada, this means in all packages.  E.g., in C++,
"func()" matches "A::func()", "A::B::func()", etc.  The
"-qualified" flag overrides this behavior, making GDB interpret the
specified name as a complete fully-qualified name instead.

See also the "delete" command which clears breakpoints by number.
(gdb) n
592             newclass.content = "<Xscript_class>";
(gdb) n
593             scr.Content = newclass;
(gdb) n
595             return scr;
(gdb) n
541       ScriptResult scr;
(gdb) n
ExprTree::ExprTree (this=0x7fffffffc9c0, tokens=std::vector of length -2345517434698, capacity -2345624808880 = {...}) at ./src/script.h:344
344             operlevel = 0;
(gdb) n
288         vector<word> token_buf;
(gdb) n
eval (tokens=...) at /usr/include/c++/10/bits/stl_vector.h:678
678           ~vector() _GLIBCXX_NOEXCEPT
(gdb) n
484       return eval(expr);
(gdb) n
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
Script (wrd=std::vector of length -3518437208633, capacity 179116299096964148 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x00005555555647ec in Script (wrd=std::vector of length -3518437208633, capacity 179116299096964148 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) p con.parent 
$17 = (Type *) 0x5555555723a0 <root_scope>
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x000055555556482d in Script (wrd=std::vector of length -3518437208633, capacity 179116299096964148 = {...}) at /usr/include/c++/10/ostream:245
245           operator<<(const void* __p)
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n
PARENT:0x5555555723a0 0x5555555723a0
871             con.name = tname;
(gdb) p tname
$18 = "MAIN"
(gdb) n
872             con.mod = _none;
(gdb) n
874             if(!newTypeContent(tname,con)) throw Error::AlreadyExist(tname);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
0x000055555556188d in newTypeContent (name=..., write=..., inglobal=<optimized out>) at ./src/script.h:181
181       return now_scope->newNode(tpf,write);
(gdb) n
Script (wrd=std::vector of length -3518437208633, capacity 179116299096964148 = {...}) at /usr/include/c++/10/ext/new_allocator.h:89
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
865               continue;
(gdb) n
846           for (size_t i = 0; i < arg_list.size(); i++) {
(gdb) n
880           scr.res = _finally;
(gdb) n
881           scr.Content = con;
(gdb) n
882           return scr;
(gdb) n
541       ScriptResult scr;
(gdb) n
Script (expr=...) at ./src/script.h:970
970         scr = Script(tmplst);
(gdb) n
971         if(CodeArr.size() == 1)  return scr;
(gdb) n
972         if(scr.res != _finally)  return scr;
(gdb) n
969         vector<word> tmplst = WordParser(CodeArr[i]);
(gdb) n
967       for (size_t i = 0; i < CodeArr.size(); i++) {
(gdb) n
968         if(CodeArr[i] == "" || CodeArr[i] == " ")  continue;
(gdb) n
968         if(CodeArr[i] == "" || CodeArr[i] == " ")  continue;
(gdb) n
969         vector<word> tmplst = WordParser(CodeArr[i]);
(gdb) n
n657          ~basic_string()
(gdb) n
970         scr = Script(tmplst);
(gdb) n

Breakpoint 3, getTypeContent (name="MAIN.fun") at ./src/script.h:142
142       if(name == ""){
(gdb) n
145       TypeFinder tpf = getPath(name);
(gdb) n
657           ~basic_string()
(gdb) n
146       Type global = root_scope.getNode(tpf);
(gdb) n
147       if(global.type != _not_exist) return global;
(gdb) n
395             return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
(gdb) n
Script (wrd=std::vector of length 3, capacity 3 = {...}) at ./src/script.h:545
545       if(wrd[0].word_type == nam && !iscmd(wrd[0].wd) && getTypeContent(wrd[0].wd).type != _not_exist){
(gdb) n
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
547         if(wrd.size() <= 1){
(gdb) n
554           if(wrd[1].word_type == chr && wrd[1].wd == "="){
(gdb) 
6175        operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
(gdb) 
559           }if(wrd[1].word_type == chr && wrd[1].wd == "("){
(gdb) 
6175        operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
(gdb) 
561                         ScriptResult scs;
(gdb) 
562             scs.Content=CallFunction(getTypeAddr(wrd[0].wd),wrd);
(gdb) 
1043          operator[](size_type __n) _GLIBCXX_NOEXCEPT
(gdb) 

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x5555555723a0 <root_scope>
CallFunction (func=0x555555588c20, call_line=...) at ./src/script.h:510
510         Script((*func).args[i]);
(gdb) 
507       now_scope = func;
(gdb) 

Hardware access (read/write) watchpoint 1: now_scope

Old value = (Type *) 0x5555555723a0 <root_scope>
New value = (Type *) 0x555555588c20
CallFunction (func=0x555555588c20, call_line=...) at ./src/script.h:509
509       for(int i = 0;i < (*func).args.size();i++){
(gdb) 
523       if(func->fromDLL != NULL){
(gdb) n
530       ScriptResult s = Script((*func).content);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at ./src/script.h:855
855             if(arg_list[i].size() <= 2){
(gdb) 
918           size() const _GLIBCXX_NOEXCEPT
(gdb) 
867             con.parent = now_scope;
(gdb) 
868             con = eval(WordCollection(arg_list[i],2));
(gdb) 
869             con.parent = now_scope;
(gdb) p con.parent 
$19 = (Type *) 0x7fffffff93a8
(gdb) p now_scope 
$20 = (Type *) 0x555555588c20
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
0x00005555555647ec in Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at ./src/script.h:869
869             con.parent = now_scope;
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
0x000055555556482d in Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at /usr/include/c++/10/ostream:245
245           operator<<(const void* __p)
(gdb) n
870             cout << "PARENT:" << con.parent << " " << now_scope << endl;
(gdb) n
PARENT:0x555555588c20 0x555555588c20
871             con.name = tname;
(gdb) n
872             con.mod = _none;
(gdb) n
874             if(!newTypeContent(tname,con)) throw Error::AlreadyExist(tname);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
0x000055555556188d in newTypeContent (name=..., write=..., inglobal=<optimized out>) at ./src/script.h:181
181       return now_scope->newNode(tpf,write);
(gdb) n
Script (wrd=std::vector of length -3518437208391, capacity -3518437208389 = {...}) at /usr/include/c++/10/ext/new_allocator.h:89
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
865               continue;
(gdb) n
846           for (size_t i = 0; i < arg_list.size(); i++) {
(gdb) n
880           scr.res = _finally;
(gdb) n
881           scr.Content = con;
(gdb) n
882           return scr;
(gdb) n
541       ScriptResult scr;
(gdb) n
642           if(scr1_.res != _finally){
(gdb) n
79            new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
646           size_t sz = getWordPos(wrd,chr,")") + 1;
(gdb) n
647           Type iftrue(now_scope);iftrue.type = _var;iftrue.vtype = _bol;iftrue.content.resize(1);iftrue.content[0] = (char)1;
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
0x0000555555562eb0 in Script (wrd=std::vector of length 19, capacity 19 = {...}) at ./src/script.h:647
647           Type iftrue(now_scope);iftrue.type = _var;iftrue.vtype = _bol;iftrue.content.resize(1);iftrue.content[0] = (char)1;
(gdb) p wrd
$21 = std::vector of length 19, capacity 19 = {{word_type = nam, wd = "for"}, {word_type = chr, wd = "("}, {word_type = nam, wd = "var"}, {word_type = nam, 
    wd = "x"}, {word_type = chr, wd = "="}, {word_type = con, wd = "0"}, {word_type = chr, wd = ","}, {word_type = nam, wd = "x"}, {word_type = chr, wd = "<="}, {
    word_type = chr, wd = "="}, {word_type = con, wd = "10"}, {word_type = chr, wd = ","}, {word_type = nam, wd = "x"}, {word_type = chr, wd = "="}, {
    word_type = nam, wd = "x"}, {word_type = chr, wd = "+"}, {word_type = con, wd = "1"}, {word_type = chr, wd = ")"}, {word_type = blo, wd = "s=s+1; "}}
(gdb) n
648           while(eval(exp[1]).content[0] == 1){
(gdb) bt
#0  Script (wrd=std::vector of length 19, capacity 19 = {...}) at ./src/script.h:648
#1  0x000055555556502e in Script (expr=...) at ./src/script.h:970
#2  0x0000555555565e1a in CallFunction (func=0x555555588c20, call_line=...) at /usr/include/c++/10/bits/basic_string.h:907
#3  0x000055555556241e in Script (wrd=...) at /usr/include/c++/10/bits/stl_vector.h:1043
#4  0x000055555556502e in Script (expr=...) at ./src/script.h:970
#5  0x0000555555559d4d in main (argc=<optimized out>, argv=<optimized out>) at ./script.cpp:88
(gdb) n

Breakpoint 3, getTypeContent (name="x") at ./src/script.h:142
142       if(name == ""){
(gdb) n
145       TypeFinder tpf = getPath(name);
(gdb) n
657           ~basic_string()
(gdb) n
146       Type global = root_scope.getNode(tpf);
(gdb) n
147       if(global.type != _not_exist) return global;
(gdb) n
148       Type thisScope = now_scope->getNode(tpf);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
getTypeContent (name="x") at ./src/script.h:148
148       Type thisScope = now_scope->getNode(tpf);
(gdb) p now_scope 
$22 = (Type *) 0x555555588c20
(gdb) p *now_scope 
$23 = {parent = 0x7fffffffc070, vtype = _function, type = _var, mod = _none, name = "fun", content = "for(var x=0,x<=10,x=x+1){s=s+1; };", 
  args = std::vector of length 0, capacity 0, funcontent = {word_type = blo, wd = "for(var x=0,x<=10,x=x+1){s=s+1; };"}, fromDLL = 0x0, 
  node = std::map with 1 element = {["x"] = {parent = 0x555555588c20, vtype = _int, type = _var, mod = _none, name = "x", content = "\000\000\000", 
      args = std::vector of length 0, capacity 0, funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, node = std::map with 0 elements}}}
(gdb) p *now_scope.parent 
$24 = {parent = 0x5555555723a0 <root_scope>, vtype = _str, type = _var, mod = _temp, name = "flag", content = "<Xscript_class>", 
  args = std::vector of length 0, capacity 0, funcontent = {word_type = emp, wd = ""}, fromDLL = 0x0, node = std::map with 1 element = {[""] = {
      parent = 0x5555555891b8, vtype = 3, type = (unknown: 0), mod = (_none | unknown: 7499620), name = "", 
      content = <error: Cannot access memory at address 0x733d737b006e0028>, args = std::vector of length 312335, capacity 0 = {<error reading variable>}}
(gdb) n
149       if(thisScope.type != _not_exist) return thisScope;
(gdb) n
Script (wrd=std::vector of length 1, capacity 1 = {...}) at ./src/script.h:545
545       if(wrd[0].word_type == nam && !iscmd(wrd[0].wd) && getTypeContent(wrd[0].wd).type != _not_exist){
(gdb) p wrd
$25 = std::vector of length 1, capacity 1 = {{word_type = nam, wd = "x"}}
(gdb) n
89            ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
(gdb) n
547         if(wrd.size() <= 1){
(gdb) n
548           scr.Content = getTypeContent(wrd[0].wd);
(gdb) n

Breakpoint 3, getTypeContent (name="x") at ./src/script.h:142
142       if(name == ""){
(gdb) n
145       TypeFinder tpf = getPath(name);
(gdb) n
657           ~basic_string()
(gdb) n
146       Type global = root_scope.getNode(tpf);
(gdb) n
147       if(global.type != _not_exist) return global;
(gdb) n
148       Type thisScope = now_scope->getNode(tpf);
(gdb) n

Hardware access (read/write) watchpoint 1: now_scope

Value = (Type *) 0x555555588c20
getTypeContent (name="x") at ./src/script.h:148
148       Type thisScope = now_scope->getNode(tpf);
(gdb) n
149       if(thisScope.type != _not_exist) return thisScope;
(gdb) n
Script (wrd=std::vector of length -2345517437005, capacity -2345624811187 = {...}) at ./src/script.h:902
902           scr.res = _finally;
(gdb) n
903           return scr;
(gdb) n
541       ScriptResult scr;
(gdb) n
ExprTree::ExprTree (this=0x7fffffffad80, tokens=std::vector of length -2345517437005, capacity -2345624811187 = {...}) at ./src/script.h:344
344             operlevel = 0;
(gdb) n
288         vector<word> token_buf;
(gdb) n
ExprTree::ExprTree (this=0x7fffffffb480, tokens=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/10/bits/stl_vector.h:1043
1043          operator[](size_type __n) _GLIBCXX_NOEXCEPT
(gdb) n
305               lr[1] = ExprTree(WordCollection(tokens,i+1));
(gdb) n
306               token_buf.clear();
(gdb) n
307               return;
(gdb) n
eval (tokens=...) at /usr/include/c++/10/bits/stl_vector.h:678
678           ~vector() _GLIBCXX_NOEXCEPT
(gdb) n
484       return eval(expr);
(gdb) 
